---
interface Props {
  title: string; href?: string; timeframe?: string; tech?: string[];
  children?: any;
}
const { title, href, timeframe, tech = [] } = Astro.props as Props;
---
<article class="card p-6 scroll-fade-in group">
  <div class="flex items-start justify-between gap-4 mb-3">
    <h3 class="text-xl font-bold">
      {href ? (
        <a href={href} target="_blank" rel="noopener noreferrer"
           class="hover:text-sky-600 dark:hover:text-sky-400 transition-colors inline-flex items-center gap-2">
          {title}
          <svg class="w-4 h-4 opacity-0 group-hover:opacity-100 transition-opacity" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
          </svg>
        </a>
      ) : title}
    </h3>
    {timeframe && (
      <span class="text-sm font-medium text-slate-500 dark:text-slate-400 bg-slate-100 dark:bg-slate-800 px-3 py-1 rounded-full">
        {timeframe}
      </span>
    )}
  </div>
  <div class="text-sm text-slate-700 dark:text-slate-300 leading-relaxed">
    <slot />
  </div>
  {tech.length > 0 && (
    <ul class="mt-4 flex flex-wrap gap-2">
      {tech.map(t => <li class="chip">{t}</li>)}
    </ul>
  )}
</article>
