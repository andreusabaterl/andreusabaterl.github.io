---
/**
 * src/layouts/Layout.astro
 * Full layout for portfolio
 */
import "../styles/global.css";

interface Props {
  title?: string;
  description?: string;
}

const {
  title = "Andreu Sabater ‚Äî Portfolio",
  description = "Backend Engineer. Python/Django, microservices, CI/CD & GenAI."
} = Astro.props;
---

<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Favicons -->
    <link rel="icon" href="/favicon.svg" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />

    <!-- Open Graph / Twitter -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="/og.png" />
    <meta name="twitter:card" content="summary_large_image" />

    <!-- Theme color for PWA / address bar -->
    <meta name="theme-color" content="#0ea5e9" />

    <!-- Optional: preload a variable font (replace if you add one) -->
    <!-- <link rel="preload" as="font" href="/fonts/InterVariable.woff2" type="font/woff2" crossorigin> -->

    <!-- Initial theme preference (no flicker) -->
    <script is:inline>
      try {
        const stored = localStorage.getItem("theme");
        const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
        if (stored === "dark" || (!stored && prefersDark)) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      } catch {}
    </script>
  </head>

  <body class="bg-white text-slate-900 antialiased dark:bg-slate-950 dark:text-slate-100 relative">
    <!-- Animated background gradients -->
    <div class="fixed inset-0 -z-10 overflow-hidden pointer-events-none">
      <!-- Main gradient orbs -->
      <div class="absolute top-0 left-1/4 w-96 h-96 bg-sky-400/20 dark:bg-sky-600/10 rounded-full blur-3xl animate-pulse-slow"></div>
      <div class="absolute top-1/3 right-1/4 w-96 h-96 bg-blue-400/20 dark:bg-blue-600/10 rounded-full blur-3xl animate-pulse-slow animate-delay-500"></div>
      <div class="absolute bottom-1/4 left-1/3 w-96 h-96 bg-purple-400/20 dark:bg-purple-600/10 rounded-full blur-3xl animate-pulse-slow animate-delay-1000"></div>

      <!-- Subtle grid pattern -->
      <div class="absolute inset-0 bg-grid-slate-100/[0.03] dark:bg-grid-slate-700/[0.03]"
           style="background-image: radial-gradient(circle, rgba(100, 116, 139, 0.08) 1px, transparent 1px); background-size: 32px 32px;"></div>
    </div>

    <!-- Scroll progress indicator -->
    <div id="scroll-progress" class="fixed top-0 left-0 h-1 bg-gradient-to-r from-sky-500 via-blue-500 to-purple-500 z-50 transition-all duration-150 ease-out" style="width: 0%;"></div>

    <!-- Skip link for accessibility -->
    <a href="#main" class="sr-only focus:not-sr-only focus:absolute focus:top-2 focus:left-2 focus:z-50 bg-sky-600 text-white px-3 py-2 rounded">
      Skip to content
    </a>

    <!-- Header / Navbar -->
    <header class="sticky top-0 z-40 border-b border-slate-200/70 dark:border-slate-800
                   backdrop-blur-md supports-[backdrop-filter]:bg-white/80 dark:supports-[backdrop-filter]:bg-slate-950/80
                   transition-all duration-300 animate-fade-in-down">
      <nav class="mx-auto max-w-4xl px-6 h-16 flex items-center justify-between">
        <a href="/" class="font-bold tracking-tight text-lg bg-gradient-to-r from-sky-600 to-blue-600 bg-clip-text text-transparent
                           hover:from-sky-700 hover:to-blue-700 transition-all">
          Andreu Sabater
        </a>
        <div class="flex items-center gap-6 text-sm">
          <a href="#experience" class="hover:text-sky-600 dark:hover:text-sky-400 transition-colors font-medium
                                      relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0
                                      after:bg-sky-600 dark:after:bg-sky-400 after:transition-all hover:after:w-full">
            Experience
          </a>
          <a href="#skills" class="hover:text-sky-600 dark:hover:text-sky-400 transition-colors font-medium
                                  relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0
                                  after:bg-sky-600 dark:after:bg-sky-400 after:transition-all hover:after:w-full">
            Skills
          </a>
          <a href="#github" class="hover:text-sky-600 dark:hover:text-sky-400 transition-colors font-medium
                                   relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0
                                   after:bg-sky-600 dark:after:bg-sky-400 after:transition-all hover:after:w-full">
            GitHub
          </a>
          <a href="#contact" class="hover:text-sky-600 dark:hover:text-sky-400 transition-colors font-medium
                                   relative after:absolute after:bottom-0 after:left-0 after:h-0.5 after:w-0
                                   after:bg-sky-600 dark:after:bg-sky-400 after:transition-all hover:after:w-full">
            Contact
          </a>
          <button id="theme-toggle"
                  class="rounded-lg border border-slate-200 dark:border-slate-700 px-3 py-1.5 text-sm
                         hover:bg-slate-50 dark:hover:bg-slate-800 hover:border-slate-300 dark:hover:border-slate-600
                         transition-all duration-300 hover:shadow-md"
                  aria-label="Toggle dark mode">
            <span class="dark:hidden">üåô</span>
            <span class="hidden dark:inline">‚òÄÔ∏è</span>
          </button>
        </div>
      </nav>
    </header>

    <!-- Main -->
    <main id="main">
      <slot />
    </main>

    <!-- Footer -->
    <footer class="mt-24 py-10 border-t border-slate-200/70 dark:border-slate-800">
      <div class="mx-auto max-w-4xl px-6 text-sm text-slate-500 dark:text-slate-400 flex flex-col sm:flex-row items-center justify-between gap-4">
        <p>¬© {new Date().getFullYear()} Andreu Sabater</p>
        <div class="flex gap-4">
          <a href="mailto:andreusabaterl@gmail.com" class="hover:underline">Email</a>
          <a href="https://linkedin.com/in/andreu-sabater-l√≥pez-067485285" rel="noopener noreferrer" class="hover:underline">LinkedIn</a>
          <a href="https://github.com/andreusabaterl" rel="noopener noreferrer" class="hover:underline">GitHub</a>
        </div>
      </div>
    </footer>

    <!-- Scroll animations script -->
    <script>
      // Intersection Observer for scroll animations
      const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('is-visible');
          }
        });
      }, observerOptions);

      // Observe all elements with scroll animation classes
      document.addEventListener('DOMContentLoaded', () => {
        const animatedElements = document.querySelectorAll('.scroll-fade-in, .scroll-slide-left, .scroll-slide-right');
        animatedElements.forEach(el => observer.observe(el));
      });

      // Scroll progress indicator
      function updateScrollProgress() {
        const scrollProgress = document.getElementById('scroll-progress');
        if (!scrollProgress) return;

        const windowHeight = window.innerHeight;
        const documentHeight = document.documentElement.scrollHeight - windowHeight;
        const scrolled = window.scrollY;
        const progress = (scrolled / documentHeight) * 100;

        scrollProgress.style.width = progress + '%';
      }

      window.addEventListener('scroll', updateScrollProgress, { passive: true });
      window.addEventListener('resize', updateScrollProgress, { passive: true });
      updateScrollProgress();
    </script>

    <!-- Theme toggle script -->
    <script is:inline>
      try {
        document.getElementById("theme-toggle")?.addEventListener("click", () => {
          const root = document.documentElement;
          const next = root.classList.contains("dark") ? "light" : "dark";

          // Add transition class
          root.style.transition = 'background-color 0.3s ease, color 0.3s ease';

          root.classList.toggle("dark");
          localStorage.setItem("theme", next);
        });
      } catch {}
    </script>
  </body>
</html>
